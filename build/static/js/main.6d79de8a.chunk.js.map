{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/Nav/Nav.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","occupation","location","onClick","validateForDupes","id","Wrapper","children","Title","Nav","App","state","friends","score","unClickedFriends","console","log","numOfDupes","i","_this","length","removeFriend","endGame","removedFriends","filter","friend","shuffleArray","shuffledFriends","j","Math","floor","random","_ref","setState","_this2","this","JSON","stringify","components_Wrapper_Wrapper","components_Nav_Nav","components_Title_Title","map","components_FriendCard_FriendCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6d79de8a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n    <div className=\"content\">\n      <ul>\n        <li>\n          <strong>Name:</strong> {props.name}\n        </li>\n        <li>\n          <strong>Occupation:</strong> {props.occupation}\n        </li>\n        <li>\n          <strong>Location:</strong> {props.location}\n        </li>\n      </ul>\n    </div>\n    <span onClick={() => \n      props.validateForDupes(props.id)\n      // props.shuffleArray(props.friend)\n      } \n      className=\"remove\">\n      ùòÖ\n    </span>\n  </div>\n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;\n","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => <h1 className=\"nav\">{props.children}</h1>;\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    friends: friends,\n    score: 0,\n    unClickedFriends: friends\n\n  };\n\n  validateForDupes = id => {\n    console.log(id);\n    let numOfDupes = 0;\n    for (var i=0; i<this.state.unClickedFriends.length; i++) {\n      if (this.state.unClickedFriends[i].id === id) {\n        numOfDupes++;\n      }\n    }\n    console.log(\"# of dupes: \" + numOfDupes)\n    if (numOfDupes === 1) {\n      console.log(\"exists\");\n      this.removeFriend(id);\n    } else if (numOfDupes === 0) {\n      console.log(\"doesn't exist\");\n      this.endGame();\n    }\n    numOfDupes = 0;\n  }\n\n  removeFriend = id => {\n    console.log(\"ID of the character to remove: \" + id);\n    const removedFriends = this.state.unClickedFriends.filter(friend => friend.id !== id);\n    console.log(removedFriends);\n    let score = this.state.score;\n    score++;\n    this.shuffleArray(removedFriends, score);\n  };\n  \n  shuffleArray = (removedFriends, score) => {\n    const shuffledFriends = this.state.friends;\n    for (let i = shuffledFriends.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledFriends[i], shuffledFriends[j]] = [shuffledFriends[j], shuffledFriends[i]]; \n    }\n    this.setState({\n      friends: shuffledFriends,\n      unClickedFriends:removedFriends,\n      score: score\n    });\n  };\n\n  endGame = () => {\n    console.log(\"game ended\");\n    this.setState({\n      friends: friends,\n      score: 0,\n      unClickedFriends: friends\n    })\n  }\n  \n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    console.log(\"Clicked friends: \" + JSON.stringify(this.state.unClickedFriends));\n    console.log(\"score: \" + this.state.score)\n    // console.log(\"Friends \" + friends);\n    return (\n      <Wrapper>\n      <Nav>Score: {this.state.score}</Nav>\n        <Title>Friends List</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            validateForDupes = {this.validateForDupes}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}