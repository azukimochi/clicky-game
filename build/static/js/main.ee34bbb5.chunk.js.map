{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Blurb/Blurb.js","components/Nav/Nav.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","onClick","validateForDupes","id","className","alt","name","src","image","Wrapper","children","Blurb","Nav","App","state","cards","score","unClickedCards","topScore","blurb","console","log","numOfDupes","i","_this","length","removeCard","endGame","removedCards","filter","card","shuffleArray","shuffledCards","j","Math","floor","random","_ref","setState","_this2","this","JSON","stringify","components_Wrapper_Wrapper","components_Nav_Nav","components_Blurb_Blurb","map","components_Card_Card","key","occupation","location","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ee34bbb5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div onClick={() => props.validateForDupes(props.id)} \n    className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n    {/* <div className=\"content\">\n      <ul>\n        <li>\n          <strong>Name:</strong> {props.name}\n        </li>\n        <li>\n          <strong>Occupation:</strong> {props.occupation}\n        </li>\n        <li>\n          <strong>Location:</strong> {props.location}\n        </li>\n      </ul>\n    </div>\n    <span \n      className=\"remove\">\n      ùòÖ\n    </span> */}\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Blurb.css\";\n\nconst Blurb = props => <h1 className=\"blurb\">{props.children}</h1>;\n\nexport default Blurb;\n","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => <h1 className=\"nav\">{props.children}</h1>;\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Blurb from \"./components/Blurb\";\nimport cards from \"./card.json\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    cards: cards,\n    score: 0,\n    unClickedCards: cards,\n    topScore: 0,\n    blurb: \"Click on unique characters to gain a point. If you click on a character that you've already selected, the game will end.\"\n  };\n\n  validateForDupes = id => {\n    console.log(id);\n    let numOfDupes = 0;\n    for (var i=0; i<this.state.unClickedCards.length; i++) {\n      if (this.state.unClickedCards[i].id === id) {\n        numOfDupes++;\n      }\n    }\n    console.log(\"# of dupes: \" + numOfDupes)\n    if (numOfDupes === 1) {\n      console.log(\"exists\");\n      this.removeCard(id);\n    } else if (numOfDupes === 0) {\n      console.log(\"doesn't exist\");\n      this.endGame(this.state.score);\n    }\n    numOfDupes = 0;\n  }\n\n  removeCard = id => {\n    console.log(\"ID of the character to remove: \" + id);\n    const removedCards = this.state.unClickedCards.filter(card => card.id !== id);\n    console.log(removedCards);\n    let score = this.state.score;\n    score++;\n    this.shuffleArray(removedCards, score);\n  };\n  \n  shuffleArray = (removedCards, score) => {\n    const shuffledCards = this.state.cards;\n    for (let i = shuffledCards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledCards[i], shuffledCards[j]] = [shuffledCards[j], shuffledCards[i]]; \n    }\n    this.setState({\n      cards: shuffledCards,\n      unClickedCards:removedCards,\n      score: score,\n      blurb: \"Way to go! +1 point!\"\n    });\n  };\n\n  endGame = score => {\n    console.log(\"game ended and the match's score is: \" + score);\n    if (score > this.state.topScore) {\n      this.setState({\n        topScore: score,\n        cards: cards,\n        score: 0,\n        unClickedCards: cards,\n        blurb: \"You lose. Try again!\"\n      }) \n    } else {\n      this.setState({\n        cards: cards,\n        score: 0,\n        unClickedCards: cards,\n        blurb: \"You lose. Try again!\"\n      })\n    }\n  }\n  \n  render() {\n    console.log(\"Clicked cards: \" + JSON.stringify(this.state.unClickedCards));\n    console.log(\"score: \" + this.state.score)\n    return (\n      <Wrapper>\n      <Nav>Score: {this.state.score} Top Score: {this.state.topScore}</Nav>\n        <Blurb>{this.state.blurb}</Blurb>\n        {this.state.cards.map(card => (\n          <Card\n            validateForDupes = {this.validateForDupes}\n            id={card.id}\n            key={card.id}\n            name={card.name}\n            image={card.image}\n            occupation={card.occupation}\n            location={card.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}