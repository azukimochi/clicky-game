{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Blurb/Blurb.js","components/Nav/Nav.js","components/Modal/Modal.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","onClick","validateForDupes","id","className","alt","name","src","image","Wrapper","children","Blurb","style","blurb","Nav","openModal","score","topScore","customStyles","content","background","top","left","right","bottom","marginRight","transform","modal","lib_default","isOpen","modalIsOpen","onRequestClose","closeModal","contentLabel","App","state","cards","unClickedCards","blurbstyle","defaultStyle","componentDidMount","_this","setState","numOfDupes","i","length","console","log","removeCard","endGame","removedCards","filter","card","shuffleArray","onHit","shuffledCards","j","Math","floor","random","_ref","onMiss","blurbStyle","color","transition","opacity","setTimeout","_this2","this","components_Wrapper_Wrapper","components_Nav_Nav","components_Blurb_Blurb","map","index","components_Card_Card","key","Modal_Modal","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1a9cf0b5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div onClick={() => props.validateForDupes(props.id)} \n    className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Blurb.css\";\n\nconst Blurb = props => <h1 className=\"blurb\" style={props.style}>{props.blurb}</h1>;\n\nexport default Blurb;\n","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => (\n<h1 className=\"nav\">\n<button id=\"instructionsBtn\" className=\"btn btn-success\"\nonClick={props.openModal}>\nInstructions\n</button>\n\nScore: {props.score}   |   Top Score: {props.topScore}\n</h1>\n)\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport \"./Modal.css\";\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    background: '#3d3737',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nconst modal = props => (\n  \n  <Modal\n    isOpen={props.modalIsOpen}\n    onRequestClose={props.closeModal}\n    style={customStyles}\n    contentLabel=\"Example Modal\"\n  >\n  <div className=\"modalContainer\">\n    <p id=\"close\" onClick={props.closeModal}>x</p>\n    <br/>\n    <h2>How to Play</h2>\n    <div className=\"modalBlurb\">Remember your childhood cartoons?</div>\n    <div className=\"modalBlurb\">This is a fun matching game themed after them!</div>\n    <br/>\n    <ul>\n      <li>Click on unique characters to gain a point.</li>\n      <li>If you click on a character that was previously selected, your score will drop to 0 and the game will end.</li>\n      <li>The top score will be recorded.</li>\n    </ul>\n    </div>\n  </Modal>\n\n)\n\nexport default modal;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Blurb from \"./components/Blurb\";\nimport cards from \"./components/Card/card.json\";\nimport Nav from \"./components/Nav\";\nimport Modal from \"./components/Modal\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    cards: cards,\n    score: 0,\n    unClickedCards: cards,\n    topScore: 0,\n    blurb: \"Click on unique characters to gain a point. If you click on a character that you've already selected, the game will end.\",\n    modalIsOpen: false,\n    blurbstyle: \"\",\n    defaultStyle: false\n  };\n\n  componentDidMount = () => {\n    this.setState({ modalIsOpen: true });\n  }\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  }\n\n  validateForDupes = id => {\n    let numOfDupes = 0;\n    for (var i = 0; i < this.state.unClickedCards.length; i++) {\n      if (this.state.unClickedCards[i].id === id) {\n        numOfDupes++;\n      }\n    }\n    console.log(\"# of dupes: \" + numOfDupes)\n    if (numOfDupes === 1) {\n      this.removeCard(id);\n    } else if (numOfDupes === 0) {\n      this.endGame(this.state.score);\n    }\n    numOfDupes = 0;\n  }\n\n  removeCard = id => {\n    const removedCards = this.state.unClickedCards.filter(card => card.id !== id);\n    let score = this.state.score;\n    score++;\n    this.shuffleArray(removedCards, score);\n  };\n\n  shuffleArray = (removedCards, score) => {\n    this.onHit()\n    const shuffledCards = this.state.cards;\n    for (let i = shuffledCards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledCards[i], shuffledCards[j]] = [shuffledCards[j], shuffledCards[i]];\n    }\n    this.setState({\n      cards: shuffledCards,\n      unClickedCards: removedCards,\n      score: score,\n      blurb: \"Way to go! +1 point!\"\n    });\n  };\n\n  endGame = score => {\n    if (score > this.state.topScore) {\n      this.onMiss()\n      this.setState({\n        topScore: score,\n        cards: cards,\n        score: 0,\n        unClickedCards: cards,\n        blurb: \"You lose. Try again!\"\n      })\n    } else {\n      this.onMiss()\n      this.setState({\n        cards: cards,\n        score: 0,\n        unClickedCards: cards,\n        blurb: \"You lose. Try again!\"\n      })\n    }\n  }\n\n  onHit = () => {\n    const correctStyle = {\n      color: 'green',\n      transition: 'opacity 2s',\n      opacity: 1\n    }\n    this.setState({\n      defaultStyle: false,\n      blurbStyle: correctStyle\n    })\n    setTimeout(() => this.setState({\n      defaultStyle: true\n    }), 1000)\n  }\n\n  onMiss = () => {\n    const correctStyle = {\n      color: 'coral',\n      transition: 'opacity 2s',\n      opacity: 1\n    }\n    this.setState({\n      defaultStyle: false,\n      blurbStyle: correctStyle\n    })\n    setTimeout(() => this.setState({\n      defaultStyle: true\n    }), 1000)\n  }\n\n\n  render() {\n    const defaultStyle = {\n      color: 'white',\n      opacity: 0\n    }\n    return (\n      <row>\n        <col-xl-12>\n          <Wrapper>\n            <Nav\n              score={this.state.score}\n              topScore={this.state.topScore}\n              openModal={this.openModal}\n            />\n            {this.state.defaultStyle ?\n              <Blurb\n                style={defaultStyle}\n                blurb={this.state.blurb}\n              />\n              :\n              <Blurb\n                style={this.state.blurbStyle}\n                blurb={this.state.blurb}\n              />\n            }\n            {this.state.cards.map((card, index) => (\n              <Card\n                validateForDupes={this.validateForDupes}\n                id={card.id}\n                key={card.id}\n                image={card.image}\n              />\n            ))}\n          </Wrapper>\n          <Modal\n            modalIsOpen={this.state.modalIsOpen}\n            closeModal={this.closeModal}\n          />\n        </col-xl-12>\n      </row>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}